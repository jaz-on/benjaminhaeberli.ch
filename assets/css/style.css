/* http://meyerweb.com/eric/tools/css/reset/
   v2.0-modified | 20110126
   License: none (public domain)
*/
html,
body,
div,
span,
applet,
object,
iframe,
h1,
h2,
h3,
h4,
h5,
h6,
p,
blockquote,
pre,
a,
abbr,
acronym,
address,
big,
cite,
code,
del,
dfn,
em,
img,
ins,
kbd,
q,
s,
samp,
small,
strike,
strong,
sub,
sup,
tt,
var,
b,
u,
i,
center,
dl,
dt,
dd,
ol,
ul,
li,
fieldset,
form,
label,
legend,
table,
caption,
tbody,
tfoot,
thead,
tr,
th,
td,
article,
aside,
canvas,
details,
embed,
figure,
figcaption,
footer,
header,
hgroup,
menu,
nav,
output,
ruby,
section,
summary,
time,
mark,
audio,
video {
  margin: 0;
  padding: 0;
  border: 0;
  font-size: 100%;
  font: inherit;
  vertical-align: baseline; }

/* make sure to set some focus styles for accessibility */
:focus {
  outline: 0; }

/* HTML5 display-role reset for older browsers */
article,
aside,
details,
figcaption,
figure,
footer,
header,
hgroup,
menu,
nav,
section {
  display: block; }

body {
  line-height: 1; }

ol,
ul {
  list-style: none; }

blockquote,
q {
  quotes: none; }

blockquote:before,
blockquote:after,
q:before,
q:after {
  content: '';
  content: none; }

table {
  border-collapse: collapse;
  border-spacing: 0; }

input[type='search']::-webkit-search-cancel-button,
input[type='search']::-webkit-search-decoration,
input[type='search']::-webkit-search-results-button,
input[type='search']::-webkit-search-results-decoration {
  -webkit-appearance: none;
  -moz-appearance: none; }

input[type='search'] {
  -webkit-appearance: none;
  -moz-appearance: none;
  box-sizing: content-box; }

textarea {
  overflow: auto;
  vertical-align: top;
  resize: vertical; }

/**
 * Correct `inline-block` display not defined in IE 6/7/8/9 and Firefox 3.
 */
audio,
canvas,
video {
  display: inline-block;
  *display: inline;
  *zoom: 1;
  max-width: 100%; }

/**
 * Prevent modern browsers from displaying `audio` without controls.
 * Remove excess height in iOS 5 devices.
 */
audio:not([controls]) {
  display: none;
  height: 0; }

/**
 * Address styling not present in IE 7/8/9, Firefox 3, and Safari 4.
 * Known issue: no IE 6 support.
 */
[hidden] {
  display: none; }

/**
 * 1. Correct text resizing oddly in IE 6/7 when body `font-size` is set using
 *    `em` units.
 * 2. Prevent iOS text size adjust after orientation change, without disabling
 *    user zoom.
 */
html {
  font-size: 100%;
  /* 1 */
  -webkit-text-size-adjust: 100%;
  /* 2 */
  -ms-text-size-adjust: 100%;
  /* 2 */ }

/**
 * Address `outline` inconsistency between Chrome and other browsers.
 */
a:focus {
  outline: thin dotted; }

/**
 * Improve readability when focused and also mouse hovered in all browsers.
 */
a:active,
a:hover {
  outline: 0; }

/**
 * 1. Remove border when inside `a` element in IE 6/7/8/9 and Firefox 3.
 * 2. Improve image quality when scaled in IE 7.
 */
img {
  border: 0;
  /* 1 */
  -ms-interpolation-mode: bicubic;
  /* 2 */ }

/**
 * Address margin not present in IE 6/7/8/9, Safari 5, and Opera 11.
 */
figure {
  margin: 0; }

/**
 * Correct margin displayed oddly in IE 6/7.
 */
form {
  margin: 0; }

/**
 * Define consistent border, margin, and padding.
 */
fieldset {
  border: 1px solid #c0c0c0;
  margin: 0 2px;
  padding: 0.35em 0.625em 0.75em; }

/**
 * 1. Correct color not being inherited in IE 6/7/8/9.
 * 2. Correct text not wrapping in Firefox 3.
 * 3. Correct alignment displayed oddly in IE 6/7.
 */
legend {
  border: 0;
  /* 1 */
  padding: 0;
  white-space: normal;
  /* 2 */
  *margin-left: -7px;
  /* 3 */ }

/**
 * 1. Correct font size not being inherited in all browsers.
 * 2. Address margins set differently in IE 6/7, Firefox 3+, Safari 5,
 *    and Chrome.
 * 3. Improve appearance and consistency in all browsers.
 */
button,
input,
select,
textarea {
  font-size: 100%;
  /* 1 */
  margin: 0;
  /* 2 */
  vertical-align: baseline;
  /* 3 */
  *vertical-align: middle;
  /* 3 */ }

/**
 * Address Firefox 3+ setting `line-height` on `input` using `!important` in
 * the UA stylesheet.
 */
button,
input {
  line-height: normal; }

/**
 * Address inconsistent `text-transform` inheritance for `button` and `select`.
 * All other form control elements do not inherit `text-transform` values.
 * Correct `button` style inheritance in Chrome, Safari 5+, and IE 6+.
 * Correct `select` style inheritance in Firefox 4+ and Opera.
 */
button,
select {
  text-transform: none; }

/**
 * 1. Avoid the WebKit bug in Android 4.0.* where (2) destroys native `audio`
 *    and `video` controls.
 * 2. Correct inability to style clickable `input` types in iOS.
 * 3. Improve usability and consistency of cursor style between image-type
 *    `input` and others.
 * 4. Remove inner spacing in IE 7 without affecting normal text inputs.
 *    Known issue: inner spacing remains in IE 6.
 */
button,
html input[type="button"],
input[type="reset"],
input[type="submit"] {
  -webkit-appearance: button;
  /* 2 */
  cursor: pointer;
  /* 3 */
  *overflow: visible;
  /* 4 */ }

/**
 * Re-set default cursor for disabled elements.
 */
button[disabled],
html input[disabled] {
  cursor: default; }

/**
 * 1. Address box sizing set to content-box in IE 8/9.
 * 2. Remove excess padding in IE 8/9.
 * 3. Remove excess padding in IE 7.
 *    Known issue: excess padding remains in IE 6.
 */
input[type='checkbox'],
input[type='radio'] {
  box-sizing: border-box;
  /* 1 */
  padding: 0;
  /* 2 */
  *height: 13px;
  /* 3 */
  *width: 13px;
  /* 3 */ }

/**
 * 1. Address `appearance` set to `searchfield` in Safari 5 and Chrome.
 * 2. Address `box-sizing` set to `border-box` in Safari 5 and Chrome
 *    (include `-moz` to future-proof).
 */
input[type='search'] {
  -webkit-appearance: textfield;
  /* 1 */
  /* 2 */
  box-sizing: content-box; }

/**
 * Remove inner padding and search cancel button in Safari 5 and Chrome
 * on OS X.
 */
input[type='search']::-webkit-search-cancel-button,
input[type='search']::-webkit-search-decoration {
  -webkit-appearance: none; }

/**
 * Remove inner padding and border in Firefox 3+.
 */
button::-moz-focus-inner,
input::-moz-focus-inner {
  border: 0;
  padding: 0; }

/**
 * 1. Remove default vertical scrollbar in IE 6/7/8/9.
 * 2. Improve readability and alignment in all browsers.
 */
textarea {
  overflow: auto;
  /* 1 */
  vertical-align: top;
  /* 2 */ }

/**
 * Remove most spacing between table cells.
 */
table {
  border-collapse: collapse;
  border-spacing: 0; }

html,
button,
input,
select,
textarea {
  color: #222; }

::-moz-selection {
  background: #b3d4fc;
  text-shadow: none; }

::selection {
  background: #b3d4fc;
  text-shadow: none; }

img {
  vertical-align: middle; }

fieldset {
  border: 0;
  margin: 0;
  padding: 0; }

textarea {
  resize: vertical; }

.chromeframe {
  margin: 0.2em 0;
  background: #ccc;
  color: #000;
  padding: 0.2em 0; }

/**
 * Include Custom Fonts 
 * ---------------------
 * EOT : IE9 Compat Modes
 * embedded-opentype : IE6-IE8
 * woff2 : Super Modern Browsers
 * woff : Pretty Modern Browsers
 * truetype : Safari, Android, iOS
 * svg : Legacy iOS
 * ---------------------
 * Source : https://css-tricks.com/snippets/css/using-font-face/
**/
@font-face {
  font-family: 'Archivo';
  font-weight: 700;
  src: url("../fonts/Archivo/Archivo-Bold.eot");
  src: url("../fonts/Archivo/Archivo-Bold.eot?#iefix") format("embedded-opentype"), url("../fonts/Archivo/Archivo-Bold.woff2") format("woff2"), url("../fonts/Archivo/Archivo-Bold.woff") format("woff"), url("../fonts/Archivo/Archivo-Bold.ttf") format("truetype"), url("../fonts/Archivo/Archivo-Bold.svg") format("svg"); }

@font-face {
  font-family: 'JetBrainsMono';
  font-weight: 400;
  src: url("../fonts/JetBrainsMono/JetBrainsMono-Regular.eot");
  src: url("../fonts/JetBrainsMono/JetBrainsMono-Regular.eot?#iefix") format("embedded-opentype"), url("../fonts/JetBrainsMono/JetBrainsMono-Regular.woff2") format("woff2"), url("../fonts/JetBrainsMono/JetBrainsMono-Regular.woff") format("woff"), url("../fonts/JetBrainsMono/JetBrainsMono-Regular.ttf") format("truetype"), url("../fonts/JetBrainsMono/JetBrainsMono-Regular.svg") format("svg"); }

@font-face {
  font-family: 'JetBrainsMono';
  font-weight: 700;
  src: url("../fonts/JetBrainsMono/JetBrainsMono-Bold.eot");
  src: url("../fonts/JetBrainsMono/JetBrainsMono-Bold.eot?#iefix") format("embedded-opentype"), url("../fonts/JetBrainsMono/JetBrainsMono-Bold.woff2") format("woff2"), url("../fonts/JetBrainsMono/JetBrainsMono-Bold.woff") format("woff"), url("../fonts/JetBrainsMono/JetBrainsMono-Bold.ttf") format("truetype"), url("../fonts/JetBrainsMono/JetBrainsMono-Bold.svg") format("svg"); }

@font-face {
  font-family: 'Chivo';
  font-weight: 400;
  font-style: normal;
  src: url("../fonts/Chivo/Chivo-Regular.eot");
  src: url("../fonts/Chivo/Chivo-Regular.eot?#iefix") format("embedded-opentype"), url("../fonts/Chivo/Chivo-Regular.woff2") format("woff2"), url("../fonts/Chivo/Chivo-Regular.woff") format("woff"), url("../fonts/Chivo/Chivo-Regular.ttf") format("truetype"), url("../fonts/Chivo/Chivo-Regular.svg") format("svg"); }

@font-face {
  font-family: 'Chivo Italic';
  font-weight: 400;
  font-style: italic, oblique;
  src: url("../fonts/Chivo/Chivo-Italic.eot");
  src: url("../fonts/Chivo/Chivo-Italic.eot?#iefix") format("embedded-opentype"), url("../fonts/Chivo/Chivo-Italic.woff2") format("woff2"), url("../fonts/Chivo/Chivo-Italic.woff") format("woff"), url("../fonts/Chivo/Chivo-Italic.ttf") format("truetype"), url("../fonts/Chivo/Chivo-Italic.svg") format("svg"); }

@font-face {
  font-family: 'Chivo';
  font-weight: 700;
  src: url("../fonts/Chivo/Chivo-Bold.eot");
  src: url("../fonts/Chivo/Chivo-Bold.eot?#iefix") format("embedded-opentype"), url("../fonts/Chivo/Chivo-Bold.woff2") format("woff2"), url("../fonts/Chivo/Chivo-Bold.woff") format("woff"), url("../fonts/Chivo/Chivo-Bold.ttf") format("truetype"), url("../fonts/Chivo/Chivo-Bold.svg") format("svg"); }

#social_menu {
  z-index: 1000;
  display: flex;
  justify-content: center;
  flex-direction: column;
  position: fixed;
  height: 100%;
  margin-left: 30px; }

#social_menu a {
  transition: all 0.5s cubic-bezier(0.19, 1, 0.22, 1); }

#social_menu a::before {
  display: none; }

#social_menu a:hover {
  transform: translateX(7px); }

#social_menu a box-icon {
  fill: white; }

#social_menu a:not(:first-child) {
  margin-top: 40px; }

#anchor_menu {
  z-index: 1000;
  display: flex;
  justify-content: center;
  align-items: center;
  flex-direction: row;
  position: fixed;
  right: 0px;
  height: 100%;
  -ms-writing-mode: tb-rl;
      writing-mode: vertical-rl;
  -webkit-text-orientation: mixed;
          text-orientation: mixed;
  font-family: 'JetBrainsMono';
  font-size: 14px; }

#anchor_menu a {
  margin-top: 20px;
  transition: all 1s cubic-bezier(0.19, 1, 0.22, 1); }

#anchor_menu a::before {
  display: none; }

#anchor_menu a:hover {
  color: #f9c722;
  transform: rotate(-30deg); }

#anchor_menu a span {
  display: flex;
  align-items: center;
  width: 74px; }

#about {
  display: flex;
  min-height: 100vh;
  overflow: hidden;
  transition: opacity 0.5s cubic-bezier(0.19, 1, 0.22, 1); }

#about > div {
  width: 50%; }

#about .about__bio .container {
  padding: 100px 200px 0px 200px; }

#about .about__bio .container p {
  font-size: 24px;
  margin-top: 50px; }

#about .about__bio .container ul {
  margin-top: 50px; }

#about .about__bio .container ul li {
  display: flex;
  align-items: center; }

#about .about__bio .container ul li span {
  margin-left: 10px; }

#about .about__bio .container ul li:not(:first-child) {
  margin-top: 15px; }

#about .about__image {
  background-color: #e0b842;
  background-image: url("../images/benjaminhaeberli.png");
  background-position: center center;
  background-repeat: no-repeat;
  background-size: contain;
  color: red;
  cursor: pointer;
  transition: all 0.5s cubic-bezier(0.19, 1, 0.22, 1); }

#about .about__image:hover {
  transform: translatex(35px);
  background-color: #e3ded8;
  background-image: url("../images/benjaminhaeberli_hover.png"); }

#education {
  margin-bottom: 200px; }

#education .education__container {
  max-width: 1520px;
  margin: auto; }

#education .education__container .education__items {
  display: flex;
  margin-top: 160px; }

#education .education__container .education__items .card {
  transition: all 0.5s cubic-bezier(0.19, 1, 0.22, 1); }

#education .education__container .education__items .education__studies {
  margin: 0px 100px 0px 0px; }

#education .education__container .education__items .education__studies .card.education__study {
  width: 400px; }

#education .education__container .education__items .education__studies .card.education__study::before {
  display: none; }

#education .education__container .education__items .education__studies .card.education__study .study__time {
  color: #686868;
  margin-bottom: 30px; }

#education .education__container .education__items .education__studies .card.education__study .study__name {
  margin-bottom: 10px; }

#education .education__container .education__items .education__studies .card.education__study .study__description {
  line-height: 25px;
  margin-bottom: 30px; }

#education .education__container .education__items .education__courses {
  display: flex;
  flex-wrap: wrap;
  justify-content: space-between; }

#education .education__container .education__items .education__courses .card.education__course {
  display: flex;
  flex-direction: column;
  justify-content: center;
  width: 350px;
  height: 100px;
  padding: 25px;
  margin-bottom: 40px; }

#education .education__container .education__items .education__courses .card.education__course::before {
  display: none; }

#education .education__container .education__items .education__courses .card.education__course .course__time {
  color: #686868; }

#experience .experience__container {
  max-width: 1520px;
  margin: auto; }

#experience .experience__container .experience__items {
  align-items: center;
  display: flex;
  flex-direction: column;
  justify-content: center;
  margin-top: 160px; }

#experience .experience__container .experience__items .experience__item {
  display: flex;
  justify-content: center; }

#experience .experience__container .experience__items .experience__item::before {
  content: attr(data-time);
  position: relative;
  color: #686868;
  width: 130px; }

#experience .experience__container .experience__items .experience__item .experience__timeline {
  display: flex;
  align-items: center;
  flex-direction: column;
  width: 150px; }

#experience .experience__container .experience__items .experience__item .experience__timeline .timeline__point {
  height: 15px;
  width: 15px;
  border-radius: 100%;
  background: #f9c722; }

#experience .experience__container .experience__items .experience__item .experience__timeline .timeline__line {
  width: 1px;
  height: 100%;
  background: #f9c722; }

#experience .experience__container .experience__items .experience__item a.experience__details {
  margin-left: 75px;
  width: 760px;
  text-decoration: none; }

#experience .experience__container .experience__items .experience__item a.experience__details:before {
  display: none; }

#experience .experience__container .experience__items .experience__item a.experience__details .card.experience__job {
  transition: all 0.2s ease; }

#experience .experience__container .experience__items .experience__item a.experience__details .card.experience__job .job__location {
  margin-top: 30px; }

#experience .experience__container .experience__items .experience__item a.experience__details .experience__works {
  max-height: 0;
  overflow: hidden;
  visibility: hidden;
  margin: 20px 0px;
  opacity: 0;
  transition: all 1s cubic-bezier(0.19, 1, 0.22, 1); }

#experience .experience__container .experience__items .experience__item a.experience__details .experience__works .card.works__container {
  background: none;
  transform: translateY(-40px);
  transition: all 1s cubic-bezier(0.19, 1, 0.22, 1); }

#experience .experience__container .experience__items .experience__item a.experience__details .experience__works .card.works__container ul li small {
  color: #686868;
  display: block; }

#experience .experience__container .experience__items .experience__item a.experience__details .experience__works .card.works__container ul li:not(:last-child) {
  margin-bottom: 15px; }

#experience .experience__container .experience__items .experience__item a.experience__details:hover .experience__job {
  transform: scale(1);
  background: none; }

#experience .experience__container .experience__items .experience__item a.experience__details:hover .experience__works {
  max-height: 500px;
  visibility: visible;
  opacity: 1; }

#experience .experience__container .experience__items .experience__item a.experience__details:hover .experience__works .works__container {
  transform: translateY(0px); }

#experience .experience__container .experience__items .experience__item:last-child .timeline__line {
  height: 0px; }

/* Basic Classes */
.colored--yellow {
  color: #f9c722; }

.colored--anthracite {
  color: #686868; }

.section__header {
  text-align: center; }

.section {
  margin-top: 250px;
  transition: opacity 0.5s ease-in-out; }

.unfocused {
  opacity: 0.5;
  transition: all 0.5s cubic-bezier(0.19, 1, 0.22, 1); }

/* Basic Tags */
body {
  background-color: black;
  background-size: cover;
  background-repeat: no-repeat;
  color: white;
  font-family: 'Chivo';
  font-size: 20px;
  font-style: normal; }

h1 {
  font-family: 'Archivo';
  font-size: 55px;
  line-height: 65px;
  font-weight: bold; }

h2 {
  font-family: 'Archivo';
  font-size: 45px;
  font-weight: bold; }

h3 {
  font-size: 30px;
  font-weight: bold;
  color: #f9c722; }

h4 {
  font-size: 24px;
  font-weight: bold;
  color: #f9c722; }

h5 {
  font-size: 20px;
  font-weight: bold;
  color: #f9c722; }

p {
  font-size: 20px;
  line-height: 35px; }

strong {
  font-weight: bold; }

small {
  font-size: 16px;
  line-height: 19px; }

figcaption {
  font-family: 'JetBrainsMono'; }

box-icon {
  fill: #f9c722; }

.section__header figcaption {
  font-size: 24px;
  color: #f9c722;
  margin-bottom: 5px; }

::-moz-selection {
  background: #f9c722;
  color: black;
  text-shadow: none; }

::selection {
  background: #f9c722;
  color: black;
  text-shadow: none; }

a {
  color: white;
  text-decoration: none;
  position: relative;
  transition: all 0.05s ease-in-out; }

a::before {
  background-color: #f9c722;
  bottom: -3px;
  content: ' ';
  height: 2px;
  left: 0;
  position: absolute;
  transition: all 0.1s ease-in-out 0s;
  visibility: visible;
  width: 100%; }

a:hover::before {
  width: 0%; }

.card {
  padding: 50px;
  background: #040404;
  cursor: pointer;
  transition: all 0.5s cubic-bezier(0.19, 1, 0.22, 1); }

.card .card__subtitle {
  font-size: 30px; }

.card:hover {
  transform: scale(0.95);
  background: none; }

.location {
  display: flex;
  align-items: center;
  color: #686868; }

.location span {
  margin-left: 5px; }

#footer {
  padding: 20px 0px;
  text-align: center; }

#contact .contact__container {
  max-width: 1520px;
  margin: auto; }

#contact .contact__container .contact__content {
  margin: auto;
  text-align: center;
  margin-top: 50px;
  width: 800px; }

#contact .contact__container .contact__content .contact__email {
  margin-top: 20px; }

#referees .referees__container {
  max-width: 1520px;
  margin: auto; }

#referees .referees__container .referees__cards {
  margin-top: 100px;
  display: flex;
  flex-wrap: wrap;
  gap: 150px;
  justify-content: center; }

#referees .referees__container .referees__cards .referees__card h5,
#referees .referees__container .referees__cards .referees__card p {
  line-height: 1.25em; }

#referees .referees__container .referees__cards .referees__card a {
  color: #686868; }

#referees .referees__container .referees__cards .referees__card a::before {
  display: none; }

#referees .referees__container .referees__cards .referees__card a:hover {
  color: #f9c722; }

#skills .skills__container {
  max-width: 1520px;
  margin: auto; }

#skills .skills__container .skills__columns {
  display: flex;
  justify-content: space-between;
  margin-top: 100px; }

#skills .skills__container .skills__columns h3 {
  color: white; }

#skills .skills__container .skills__columns ul {
  font-style: italic;
  margin-top: 30px; }

#skills .skills__container .skills__columns ul li span {
  color: #686868; }

#skills .skills__container .skills__columns ul li.favorite {
  color: #f9c722;
  font-weight: bold; }

#skills .skills__container .skills__columns ul li:not(:last-child) {
  margin-bottom: 15px; }

#projects .projects_container {
  max-width: 1520px;
  margin: auto; }

#projects .projects_container .projects__cards {
  margin-top: 200px;
  display: flex;
  flex-wrap: wrap;
  gap: 40px;
  justify-content: flex-start; }

#projects .projects_container .projects__cards .card.projects__project {
  padding: 50px;
  width: 380px;
  cursor: pointer; }

#projects .projects_container .projects__cards .card.projects__project::before {
  display: none; }

#projects .projects_container .projects__cards .card.projects__project .project__header {
  display: flex;
  justify-content: space-between; }

#projects .projects_container .projects__cards .card.projects__project h3 {
  margin-top: 30px;
  color: white; }

#projects .projects_container .projects__cards .card.projects__project .project__description {
  margin-top: 25px; }

#projects .projects_container .projects__cards .card.projects__project .project__languages {
  margin-top: 25px;
  color: #686868; }

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
