/* Mixins */
/* Classes */
.colored--yellow {
  color: #f9c722; }

.colored--anthracite {
  color: #686868; }

.section__header {
  text-align: center; }

.section {
  transition: opacity 0.5s ease-in-out; }

/* .hidden {
    display: none;
    visibility: hidden;
}

.unfocused {
    opacity: 0.5;
    -o-transition: all 0.5s cubic-bezier(0.19, 1, 0.22, 1);
    transition: all 0.5s cubic-bezier(0.19, 1, 0.22, 1);
} */
/* http://meyerweb.com/eric/tools/css/reset/
   v2.0-modified | 20110126
   License: none (public domain)
*/
html,
body,
div,
span,
applet,
object,
iframe,
h1,
h2,
h3,
h4,
h5,
h6,
p,
blockquote,
pre,
a,
abbr,
acronym,
address,
big,
cite,
code,
del,
dfn,
em,
img,
ins,
kbd,
q,
s,
samp,
small,
strike,
strong,
sub,
sup,
tt,
var,
b,
u,
i,
center,
dl,
dt,
dd,
ol,
ul,
li,
fieldset,
form,
label,
legend,
table,
caption,
tbody,
tfoot,
thead,
tr,
th,
td,
article,
aside,
canvas,
details,
embed,
figure,
figcaption,
footer,
header,
hgroup,
menu,
nav,
output,
ruby,
section,
summary,
time,
mark,
audio,
video {
  margin: 0;
  padding: 0;
  border: 0;
  font-size: 100%;
  font: inherit;
  vertical-align: baseline; }

/* make sure to set some focus styles for accessibility */
:focus {
  outline: 0; }

/* HTML5 display-role reset for older browsers */
article,
aside,
details,
figcaption,
figure,
footer,
header,
hgroup,
menu,
nav,
section {
  display: block; }

body {
  line-height: 1; }

ol,
ul {
  list-style: none; }

blockquote,
q {
  quotes: none; }

blockquote:before,
blockquote:after,
q:before,
q:after {
  content: '';
  content: none; }

table {
  border-collapse: collapse;
  border-spacing: 0; }

input[type='search']::-webkit-search-cancel-button,
input[type='search']::-webkit-search-decoration,
input[type='search']::-webkit-search-results-button,
input[type='search']::-webkit-search-results-decoration {
  -webkit-appearance: none;
  -moz-appearance: none; }

input[type='search'] {
  -webkit-appearance: none;
  -moz-appearance: none;
  box-sizing: content-box; }

textarea {
  overflow: auto;
  vertical-align: top;
  resize: vertical; }

/**
 * Correct `inline-block` display not defined in IE 6/7/8/9 and Firefox 3.
 */
audio,
canvas,
video {
  display: inline-block;
  *display: inline;
  *zoom: 1;
  max-width: 100%; }

/**
 * Prevent modern browsers from displaying `audio` without controls.
 * Remove excess height in iOS 5 devices.
 */
audio:not([controls]) {
  display: none;
  height: 0; }

/**
 * Address styling not present in IE 7/8/9, Firefox 3, and Safari 4.
 * Known issue: no IE 6 support.
 */
[hidden] {
  display: none; }

/**
 * 1. Correct text resizing oddly in IE 6/7 when body `font-size` is set using
 *    `em` units.
 * 2. Prevent iOS text size adjust after orientation change, without disabling
 *    user zoom.
 */
html {
  font-size: 100%;
  /* 1 */
  -webkit-text-size-adjust: 100%;
  /* 2 */
  -ms-text-size-adjust: 100%;
  /* 2 */ }

/**
 * Address `outline` inconsistency between Chrome and other browsers.
 */
a:focus {
  outline: thin dotted; }

/**
 * Improve readability when focused and also mouse hovered in all browsers.
 */
a:active,
a:hover {
  outline: 0; }

/**
 * 1. Remove border when inside `a` element in IE 6/7/8/9 and Firefox 3.
 * 2. Improve image quality when scaled in IE 7.
 */
img {
  border: 0;
  /* 1 */
  -ms-interpolation-mode: bicubic;
  /* 2 */ }

/**
 * Address margin not present in IE 6/7/8/9, Safari 5, and Opera 11.
 */
figure {
  margin: 0; }

/**
 * Correct margin displayed oddly in IE 6/7.
 */
form {
  margin: 0; }

/**
 * Define consistent border, margin, and padding.
 */
fieldset {
  border: 1px solid #c0c0c0;
  margin: 0 2px;
  padding: 0.35em 0.625em 0.75em; }

/**
 * 1. Correct color not being inherited in IE 6/7/8/9.
 * 2. Correct text not wrapping in Firefox 3.
 * 3. Correct alignment displayed oddly in IE 6/7.
 */
legend {
  border: 0;
  /* 1 */
  padding: 0;
  white-space: normal;
  /* 2 */
  *margin-left: -7px;
  /* 3 */ }

/**
 * 1. Correct font size not being inherited in all browsers.
 * 2. Address margins set differently in IE 6/7, Firefox 3+, Safari 5,
 *    and Chrome.
 * 3. Improve appearance and consistency in all browsers.
 */
button,
input,
select,
textarea {
  font-size: 100%;
  /* 1 */
  margin: 0;
  /* 2 */
  vertical-align: baseline;
  /* 3 */
  *vertical-align: middle;
  /* 3 */ }

/**
 * Address Firefox 3+ setting `line-height` on `input` using `!important` in
 * the UA stylesheet.
 */
button,
input {
  line-height: normal; }

/**
 * Address inconsistent `text-transform` inheritance for `button` and `select`.
 * All other form control elements do not inherit `text-transform` values.
 * Correct `button` style inheritance in Chrome, Safari 5+, and IE 6+.
 * Correct `select` style inheritance in Firefox 4+ and Opera.
 */
button,
select {
  text-transform: none; }

/**
 * 1. Avoid the WebKit bug in Android 4.0.* where (2) destroys native `audio`
 *    and `video` controls.
 * 2. Correct inability to style clickable `input` types in iOS.
 * 3. Improve usability and consistency of cursor style between image-type
 *    `input` and others.
 * 4. Remove inner spacing in IE 7 without affecting normal text inputs.
 *    Known issue: inner spacing remains in IE 6.
 */
button,
html input[type="button"],
input[type="reset"],
input[type="submit"] {
  -webkit-appearance: button;
  /* 2 */
  cursor: pointer;
  /* 3 */
  *overflow: visible;
  /* 4 */ }

/**
 * Re-set default cursor for disabled elements.
 */
button[disabled],
html input[disabled] {
  cursor: default; }

/**
 * 1. Address box sizing set to content-box in IE 8/9.
 * 2. Remove excess padding in IE 8/9.
 * 3. Remove excess padding in IE 7.
 *    Known issue: excess padding remains in IE 6.
 */
input[type='checkbox'],
input[type='radio'] {
  box-sizing: border-box;
  /* 1 */
  padding: 0;
  /* 2 */
  *height: 13px;
  /* 3 */
  *width: 13px;
  /* 3 */ }

/**
 * 1. Address `appearance` set to `searchfield` in Safari 5 and Chrome.
 * 2. Address `box-sizing` set to `border-box` in Safari 5 and Chrome
 *    (include `-moz` to future-proof).
 */
input[type='search'] {
  -webkit-appearance: textfield;
  /* 1 */
  /* 2 */
  box-sizing: content-box; }

/**
 * Remove inner padding and search cancel button in Safari 5 and Chrome
 * on OS X.
 */
input[type='search']::-webkit-search-cancel-button,
input[type='search']::-webkit-search-decoration {
  -webkit-appearance: none; }

/**
 * Remove inner padding and border in Firefox 3+.
 */
button::-moz-focus-inner,
input::-moz-focus-inner {
  border: 0;
  padding: 0; }

/**
 * 1. Remove default vertical scrollbar in IE 6/7/8/9.
 * 2. Improve readability and alignment in all browsers.
 */
textarea {
  overflow: auto;
  /* 1 */
  vertical-align: top;
  /* 2 */ }

/**
 * Remove most spacing between table cells.
 */
table {
  border-collapse: collapse;
  border-spacing: 0; }

html,
button,
input,
select,
textarea {
  color: #222; }

::-moz-selection {
  background: #b3d4fc;
  text-shadow: none; }

::selection {
  background: #b3d4fc;
  text-shadow: none; }

img {
  vertical-align: middle; }

fieldset {
  border: 0;
  margin: 0;
  padding: 0; }

textarea {
  resize: vertical; }

.chromeframe {
  margin: 0.2em 0;
  background: #ccc;
  color: #000;
  padding: 0.2em 0; }

/**
 * Include Custom Fonts 
 * ---------------------
 * EOT : IE9 Compat Modes
 * embedded-opentype : IE6-IE8
 * woff2 : Super Modern Browsers
 * woff : Pretty Modern Browsers
 * truetype : Safari, Android, iOS
 * svg : Legacy iOS
 * ---------------------
 * Source : https://css-tricks.com/snippets/css/using-font-face/
**/
@font-face {
  font-family: 'Archivo';
  font-weight: 700;
  src: url("../fonts/Archivo/Archivo-Bold.eot");
  src: url("../fonts/Archivo/Archivo-Bold.eot?#iefix") format("embedded-opentype"), url("../fonts/Archivo/Archivo-Bold.woff2") format("woff2"), url("../fonts/Archivo/Archivo-Bold.woff") format("woff"), url("../fonts/Archivo/Archivo-Bold.ttf") format("truetype"), url("../fonts/Archivo/Archivo-Bold.svg") format("svg"); }

@font-face {
  font-family: 'JetBrainsMono';
  font-weight: 400;
  src: url("../fonts/JetBrainsMono/JetBrainsMono-Regular.eot");
  src: url("../fonts/JetBrainsMono/JetBrainsMono-Regular.eot?#iefix") format("embedded-opentype"), url("../fonts/JetBrainsMono/JetBrainsMono-Regular.woff2") format("woff2"), url("../fonts/JetBrainsMono/JetBrainsMono-Regular.woff") format("woff"), url("../fonts/JetBrainsMono/JetBrainsMono-Regular.ttf") format("truetype"), url("../fonts/JetBrainsMono/JetBrainsMono-Regular.svg") format("svg"); }

@font-face {
  font-family: 'JetBrainsMono';
  font-weight: 700;
  src: url("../fonts/JetBrainsMono/JetBrainsMono-Bold.eot");
  src: url("../fonts/JetBrainsMono/JetBrainsMono-Bold.eot?#iefix") format("embedded-opentype"), url("../fonts/JetBrainsMono/JetBrainsMono-Bold.woff2") format("woff2"), url("../fonts/JetBrainsMono/JetBrainsMono-Bold.woff") format("woff"), url("../fonts/JetBrainsMono/JetBrainsMono-Bold.ttf") format("truetype"), url("../fonts/JetBrainsMono/JetBrainsMono-Bold.svg") format("svg"); }

@font-face {
  font-family: 'Chivo';
  font-weight: 400;
  font-style: normal;
  src: url("../fonts/Chivo/Chivo-Regular.eot");
  src: url("../fonts/Chivo/Chivo-Regular.eot?#iefix") format("embedded-opentype"), url("../fonts/Chivo/Chivo-Regular.woff2") format("woff2"), url("../fonts/Chivo/Chivo-Regular.woff") format("woff"), url("../fonts/Chivo/Chivo-Regular.ttf") format("truetype"), url("../fonts/Chivo/Chivo-Regular.svg") format("svg"); }

@font-face {
  font-family: 'Chivo Italic';
  font-weight: 400;
  font-style: italic, oblique;
  src: url("../fonts/Chivo/Chivo-Italic.eot");
  src: url("../fonts/Chivo/Chivo-Italic.eot?#iefix") format("embedded-opentype"), url("../fonts/Chivo/Chivo-Italic.woff2") format("woff2"), url("../fonts/Chivo/Chivo-Italic.woff") format("woff"), url("../fonts/Chivo/Chivo-Italic.ttf") format("truetype"), url("../fonts/Chivo/Chivo-Italic.svg") format("svg"); }

@font-face {
  font-family: 'Chivo';
  font-weight: 700;
  src: url("../fonts/Chivo/Chivo-Bold.eot");
  src: url("../fonts/Chivo/Chivo-Bold.eot?#iefix") format("embedded-opentype"), url("../fonts/Chivo/Chivo-Bold.woff2") format("woff2"), url("../fonts/Chivo/Chivo-Bold.woff") format("woff"), url("../fonts/Chivo/Chivo-Bold.ttf") format("truetype"), url("../fonts/Chivo/Chivo-Bold.svg") format("svg"); }

nav#social {
  margin-bottom: 25px; }

nav#social a::before {
  display: none; }

nav#social a:hover {
  transform: translateX(7px); }

nav#social a box-icon {
  fill: white; }

nav#social a:not(:last-child) {
  margin-right: 5px; }

#anchor_menu {
  z-index: 1000;
  display: none;
  /* display: flex; */
  justify-content: center;
  align-items: center;
  flex-direction: row;
  position: fixed;
  right: 0px;
  height: 100%;
  -ms-writing-mode: tb-rl;
      writing-mode: vertical-rl;
  -webkit-text-orientation: mixed;
          text-orientation: mixed;
  font-family: 'JetBrainsMono';
  font-size: 14px; }

#anchor_menu a {
  margin-top: 20px;
  transition: all 1s cubic-bezier(0.19, 1, 0.22, 1); }

#anchor_menu a::before {
  display: none; }

#anchor_menu a:hover {
  /* transform: rotate(-30deg); */
  transform: translateX(-7px); }

#anchor_menu a span {
  display: flex;
  align-items: center;
  width: 74px; }

#anchor_menu:hover a:not(:hover) {
  opacity: 0.3; }

#footer {
  padding: 20px 0px;
  line-height: 1.2em;
  text-align: center;
  margin-bottom: 100px; }

#about {
  display: flex;
  flex-wrap: wrap;
  min-height: 100vh;
  overflow: hidden;
  transition: opacity 0.5s cubic-bezier(0.19, 1, 0.22, 1); }

#about .bio {
  width: 50%;
  display: flex;
  justify-content: center;
  align-items: center; }

#about .bio .container {
  max-width: 570px; }

#about .bio .container p {
  font-size: 24px;
  line-height: 35px;
  margin-top: 50px; }

#about .bio .container ul {
  margin-top: 50px; }

#about .bio .container ul li {
  display: flex;
  align-items: center; }

#about .bio .container ul li span {
  margin-left: 10px; }

#about .bio .container ul li:not(:first-child) {
  margin-top: 15px; }

#about .about__image {
  width: 50%;
  background-color: #e0b842;
  background-image: url("../images/benjaminhaeberli.png");
  background-position: center bottom;
  background-repeat: no-repeat;
  background-size: contain;
  color: red;
  transition: transform 0.5s cubic-bezier(0.19, 1, 0.22, 1); }

#about .about__image:hover {
  transform: translatex(50px);
  background-color: #e3ded8;
  background-image: url("../images/benjaminhaeberli_hover.png"); }

@media only screen and (max-width: 1450px) {
  #about {
    padding: 100px;
    min-height: 0px; }
  #about .bio {
    width: 100%; }
  #about .bio .container {
    max-width: 680px; }
  #about .about__image {
    display: none;
    visibility: hidden; } }

@media only screen and (max-width: 850px) {
  #about {
    padding: 120px 50px; }
  #about .bio .container p {
    font-size: 20px;
    line-height: 30px;
    margin-top: 25px; }
  #about .bio .container ul {
    font-size: 18px;
    margin-top: 25px; } }

#learning {
  padding: 200px; }

#learning .container {
  max-width: 1520px;
  /* margin: auto; */
  /* @media only screen and (max-width: 1520px) {
        max-width: none;
    }
    @media only screen and (max-width: 1024px) {
    } */
  display: flex;
  flex-wrap: wrap;
  justify-content: space-between; }

#learning .container article {
  width: 46%; }

#learning .container #experience .experience .date {
  color: #686868;
  margin-bottom: 15px; }

#learning .container #experience .experience h3 {
  color: #f9c722; }

#learning .container #courses .courses h3 {
  margin-bottom: 25px; }

#learning .container #courses .courses .course {
  transition: all 0.2s cubic-bezier(0.4, 0, 0.2, 1);
  margin-bottom: 25px;
  display: flex;
  align-items: center;
  gap: 15px; }

#learning .container #courses .courses .course .platform {
  color: #686868; }

#learning .container #courses .courses .course:hover {
  transition: all 0.2s cubic-bezier(0.4, 0, 0.2, 1);
  transform: translateX(20px);
  opacity: 0.3;
  cursor: pointer; }

@media only screen and (max-width: 1450px) {
  #learning {
    padding: 100px; }
  #learning .container {
    margin: auto;
    gap: 75px; } }

@media only screen and (max-width: 1290px) {
  #learning .container {
    max-width: 680px; }
  #learning .container article {
    width: 100%; } }

@media only screen and (max-width: 850px) {
  #learning {
    padding: 50px 50px; } }

#practice {
  background-color: #070707;
  padding: 200px; }

#practice .container {
  max-width: 1520px;
  /* margin: auto; */
  /* @media only screen and (max-width: 1520px) {
        max-width: none;
    }
    @media only screen and (max-width: 1024px) {
    } */
  display: flex;
  flex-wrap: wrap;
  justify-content: space-between; }

#practice .container article {
  width: 46%; }

#practice .container #skills .domains {
  display: flex;
  flex-wrap: wrap;
  gap: 45px; }

#practice .container #skills h3 {
  margin-bottom: 25px; }

#practice .container #skills li {
  color: #686868;
  margin-bottom: 10px; }

#practice .container #skills li a {
  color: #686868;
  transition: none; }

#practice .container #skills li a::before {
  display: none; }

#practice .container #skills li a:hover {
  color: #f9c722;
  transition: none; }

#practice .container #projects .projects h3 {
  margin-bottom: 25px; }

#practice .container #projects .projects .project {
  margin-bottom: 25px;
  display: flex;
  align-items: center;
  gap: 15px; }

#practice .container #projects .projects .project .tools {
  color: #686868; }

@media only screen and (max-width: 1450px) {
  #practice {
    padding: 100px; }
  #practice .container {
    margin: auto;
    gap: 75px; } }

@media only screen and (max-width: 1290px) {
  #practice .container {
    max-width: 680px; }
  #practice .container article {
    width: 100%; } }

@media only screen and (max-width: 850px) {
  #practice {
    padding: 50px 50px; }
  #practice .container #skills .domains {
    gap: 25px; }
  #practice .container #skills h3 {
    margin-bottom: 10px; } }

#referees {
  padding: 100px 0px;
  background-color: #070707; }

#referees .container {
  max-width: 1520px;
  /* margin: auto; */
  /* @media only screen and (max-width: 1520px) {
        max-width: none;
    }
    @media only screen and (max-width: 1024px) {
    } */
  margin: auto; }

#referees .container header {
  text-align: center; }

#referees .container .referees {
  display: flex;
  flex-wrap: wrap;
  gap: 75px;
  justify-content: center; }

#referees .container .referees .referee h3 {
  color: #f9c722; }

#referees .container .referees .referee h3,
#referees .container .referees .referee p {
  line-height: 1.25em; }

#referees .container .referees .referee a {
  color: #686868; }

#referees .container .referees .referee a::before {
  display: none; }

#referees .container .referees .referee a:hover {
  color: #f9c722; }

@media only screen and (max-width: 1450px) {
  #referees {
    padding: 100px; }
  #referees .container .referees {
    justify-content: space-between; } }

@media only screen and (max-width: 1290px) {
  #referees .container {
    max-width: 680px; }
  #referees .container article {
    width: 100%; } }

@media only screen and (max-width: 850px) {
  #referees {
    padding: 50px 50px; }
  #referees .container {
    max-width: 100%; }
  #referees .container .referees {
    gap: 25px; } }

@media only screen and (max-width: 497px) {
  #referees .container header {
    text-align: left; } }

#contact {
  padding: 200px 0px; }

#contact .container {
  display: block;
  margin: auto;
  padding: 75px;
  max-width: 950px;
  border: 4px solid #f9c722;
  transition: all 0.2s cubic-bezier(0.19, 1, 0.22, 1); }

#contact .container header {
  text-align: center; }

#contact .container .contact {
  margin: auto;
  text-align: center;
  max-width: 800px; }

#contact .container .contact p {
  line-height: 35px; }

#contact .container .contact .email {
  margin-top: 20px;
  color: #f9c722; }

#contact .container:hover {
  background-color: #e1b943;
  border: 4px solid rgba(0, 0, 0, 0);
  color: black;
  transition: all 0.2s cubic-bezier(0.19, 1, 0.22, 1); }

#contact .container:hover header figcaption {
  color: black; }

#contact .container:hover .contact .email a {
  color: black; }

#contact .container:hover .contact .email a::before {
  background-color: black; }

@media only screen and (max-width: 1450px) {
  #contact {
    padding: 100px; }
  #contact .container {
    margin: auto;
    max-width: 100%; } }

@media only screen and (max-width: 850px) {
  #contact {
    padding: 50px 50px; }
  #contact .container {
    padding: 50px 25px; }
  #contact .container .contact p {
    line-height: 25px; } }

/* Basic Tags */
body {
  background-color: black;
  background-size: cover;
  background-repeat: no-repeat;
  color: white;
  font-family: 'Chivo';
  font-size: 20px;
  font-style: normal; }

h1 {
  font-family: 'Archivo';
  font-size: 55px;
  line-height: 65px;
  font-weight: bold; }

h2 {
  font-size: 45px;
  font-weight: bold; }

h3 {
  font-size: 20px;
  font-weight: bold; }

h4 {
  font-size: 20px;
  font-weight: bold;
  color: #f9c722; }

p {
  font-size: 20px;
  line-height: 25px; }

strong {
  font-weight: bold; }

small {
  font-size: 16px;
  line-height: 20px; }

box-icon {
  fill: #f9c722; }

header {
  margin-bottom: 50px; }

header figcaption {
  color: #f9c722;
  font-family: 'JetBrainsMono';
  font-size: 16px;
  margin-top: 5px; }

::-moz-selection {
  background: #f9c722;
  color: black;
  text-shadow: none; }

::selection {
  background: #f9c722;
  color: black;
  text-shadow: none; }

a {
  color: white;
  text-decoration: none;
  position: relative;
  transition: all 0.2s cubic-bezier(0.4, 0, 0.2, 1); }

a::before {
  background-color: #f9c722;
  bottom: -3px;
  content: ' ';
  height: 2px;
  left: 0;
  position: absolute;
  transition: all 0.2s cubic-bezier(0.4, 0, 0.2, 1);
  visibility: visible;
  width: 100%; }

a:hover::before {
  width: 0%; }

.location {
  display: flex;
  align-items: center;
  color: #686868; }

.location span {
  margin-left: 5px; }

@media only screen and (max-width: 850px) {
  body {
    font-size: 16px; }
  h1 {
    font-size: 40px;
    line-height: 50px; }
  h2 {
    font-size: 30px; }
  h3 {
    font-size: 16px; }
  h4 {
    font-size: 16px; }
  p {
    font-size: 16px;
    line-height: 20px; }
  small {
    font-size: 12px; }
  header figcaption {
    font-size: 14px; } }

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
